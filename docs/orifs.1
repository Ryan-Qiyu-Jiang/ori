.TH ORIFS "1" "September 2013" "Ori Project" "Ori Distributed File System"
.SH NAME
orifs \- Ori File System FUSE Driver
.SH SYNOPSIS
.B orifs
-o [\fIOPTIONS\fR...] \fIREPOSITORY\fR \fIMOUNTPOINT\fR
.SH DESCRIPTION
orifs is the FUSE driver for the Ori distributed file system.

Currently, orifs is crash consistent up until the last snapshot. Users should 
run \fBori snapshot\fR to guarantee data is saved persistently.  When 
recovering from a crash the tool reports an error message explaining where 
unsaved data is located and how it may be recovered.  You can destroy the 
unsaved data by using the \fBori cleanup\fR command.  In future releases this 
bug will addressed.

.SH MOUNT OPTIONS
All the mount options for FUSE apply. In addition, the following options may
be specfied.

.TP
\fBclone=[\fIREMOTEPATH\fR]\fR
Replicate the file system from the specified repository.
.TP
\fBcache=[\fInone\fR,\fIshallow\fR,\fIdeep\fR]\fR
Used in conjunction with \fBclone\fR to specify how the replica should be cached.
Specifying "\fInone\fR" disables caching. The default is "\fIdeep\fR", but
you can also create a "\fIshallow\fR" replica of the remote repository.
.TP
\fBjournal=[\fInone\fR,\fIasync\fR,\fIsync\fR]\fR
Set the journal mode for the file system. The default is to use asynchronous
journalling ("\fIasync\fR"), but you can also force synchronous journalling
("\fIsync\fR") or disable it entirely ("\fInone\fR").

.SH SUPPORTED COMMANDS
The file system can be controlled by the command line interface.  Running 
commands from anywhere inside the mounted file system should allow the command 
line to detect and communicate with the file system.  Not all commands are 
supported on a running file system, and some hidden commands for debugging or 
are not recommended.  Additional commands will be added in future releases.  

.SH "SEE ALSO"
.BR ori (1),
.BR ori_httpd (1),
.BR fuse (8)
